// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    /*
    So the idea is that, we will need to divide into 2 parts because one is for the internal registers that are inside the RAM chip, and the rest of the 3 bits to select the ram itself.
    */
    DMux8Way(in=load, sel=address[3..5], a=dmuxOut1, b=dmuxOut2, c=dmuxOut3, d=dmuxOut4, e=dmuxOut5, f=dmuxOut6, g=dmuxOut7, h=dmuxOut8);

    RAM8(in=in, load=dmuxOut1, address=address[0..2], out=ram1out);
    RAM8(in=in, load=dmuxOut2, address=address[0..2], out=ram2out);
    RAM8(in=in, load=dmuxOut3, address=address[0..2], out=ram3out);
    RAM8(in=in, load=dmuxOut4, address=address[0..2], out=ram4out);
    RAM8(in=in, load=dmuxOut5, address=address[0..2], out=ram5out);
    RAM8(in=in, load=dmuxOut6, address=address[0..2], out=ram6out);
    RAM8(in=in, load=dmuxOut7, address=address[0..2], out=ram7out);
    RAM8(in=in, load=dmuxOut8, address=address[0..2], out=ram8out);

    Mux8Way16(a=ram1out, b=ram2out, c=ram3out, d=ram4out, e=ram5out, f=ram6out, g=ram7out, h=ram8out, sel=address[3..5], out=out);
}
